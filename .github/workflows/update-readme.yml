name: Update README

on:
  schedule:
    # Runs at 8 AM UTC every day
    - cron: '0 8 * * *'
  workflow_dispatch: # Allows manual triggering
  repository_dispatch:
    types: [resume_updated] # Triggered when resume is updated

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Download Latest Resume PDF
        if: github.event_name == 'repository_dispatch'
        run: |
          # Get the latest release from the private resume repo
          echo "Fetching latest release info..."
          LATEST_RELEASE=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            https://api.github.com/repos/fz42net/resume/releases/latest)
          
          echo "API Response:"
          echo "$LATEST_RELEASE" | jq '.'
          
          # Check if we got a valid response
          if echo "$LATEST_RELEASE" | jq -e '.assets' > /dev/null; then
            # Extract the download URL for resume.pdf
            DOWNLOAD_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name=="resume.pdf") | .url')
            
            if [ "$DOWNLOAD_URL" != "null" ] && [ -n "$DOWNLOAD_URL" ]; then
              echo "Downloading PDF from: $DOWNLOAD_URL"
              # Download the PDF
              curl -L -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
                -H "Accept: application/octet-stream" \
                "$DOWNLOAD_URL" -o resume.pdf
              
              echo "Downloaded resume.pdf from version: ${{ github.event.client_payload.version }}"
            else
              echo "Error: Could not find resume.pdf in release assets"
              exit 1
            fi
          else
            echo "Error: Invalid API response or no releases found"
            echo "$LATEST_RELEASE"
            exit 1
          fi
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      
      - name: Update README
        run: uv run update_readme.py
      
      - name: Commit changes
        run: |
          git diff
          git config --global user.email "actions@users.noreply.github.com"
          git config --global user.name "README-bot"
          git add README.md
          # Add PDF if it was downloaded
          if [ -f resume.pdf ]; then
            git add resume.pdf
          fi
          if ! git diff --quiet || ! git diff --staged --quiet; then
            if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
              git commit -m "Update README and resume.pdf from release ${{ github.event.client_payload.version }}"
            else
              git commit -m "Update README via GitHub Action"
            fi
            git push
          fi